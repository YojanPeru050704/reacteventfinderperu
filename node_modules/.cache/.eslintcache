[{"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\index.js":"1","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\App.js":"2","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\SearchBar.js":"3","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\Events.js":"4","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\AddButon.js":"5","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\Modal.js":"6","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\AddEventModal.js":"7","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\EditEventModal.js":"8","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\ConfirmEventModal.js":"9","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\store.js":"10","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\index.js":"11","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\eventReducer.js":"12","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\types.js":"13","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\eventActions.js":"14","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\EventItem.js":"15","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\auth\\Login.js":"16","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\auth\\RegisterUserModal.js":"17","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\authReducer.js":"18","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\authActions.js":"19"},{"size":235,"mtime":1685816026713,"results":"20","hashOfConfig":"21"},{"size":1950,"mtime":1686342822625,"results":"22","hashOfConfig":"21"},{"size":3148,"mtime":1686428680716,"results":"23","hashOfConfig":"21"},{"size":3417,"mtime":1686697057084,"results":"24","hashOfConfig":"21"},{"size":1149,"mtime":1686618131167,"results":"25","hashOfConfig":"21"},{"size":397,"mtime":1676929987865,"results":"26","hashOfConfig":"21"},{"size":4452,"mtime":1686695758500,"results":"27","hashOfConfig":"21"},{"size":3546,"mtime":1686628406976,"results":"28","hashOfConfig":"21"},{"size":1603,"mtime":1677634941880,"results":"29","hashOfConfig":"21"},{"size":443,"mtime":1677196243145,"results":"30","hashOfConfig":"21"},{"size":221,"mtime":1685638998182,"results":"31","hashOfConfig":"21"},{"size":2632,"mtime":1686364106081,"results":"32","hashOfConfig":"21"},{"size":981,"mtime":1686363625491,"results":"33","hashOfConfig":"21"},{"size":5617,"mtime":1686764235801,"results":"34","hashOfConfig":"21"},{"size":2831,"mtime":1686353644520,"results":"35","hashOfConfig":"21"},{"size":5492,"mtime":1686691258741,"results":"36","hashOfConfig":"21"},{"size":7831,"mtime":1686339923813,"results":"37","hashOfConfig":"21"},{"size":2958,"mtime":1686695962116,"results":"38","hashOfConfig":"21"},{"size":3934,"mtime":1686764169785,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"jullle",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\index.js",[],[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\App.js",["109","110"],[],"import React, {Fragment, useEffect, useState} from 'react'\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport SearchBar from './components/layout/SearchBar';\nimport Events from './components/events/Events'\nimport AddButon from './components/layout/AddButon';\nimport AddEventModal from './components/events/AddEventModal'\nimport EditEventModal from './components/events/EditEventModal';\nimport ConfirmEventModal from './components/events/ConfirmEventModal'\nimport RegisterUserModal from './components/auth/RegisterUserModal'\nimport Login from './components/auth/Login';\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n\n\nconst  App = () => {\n\n   \n\n  useEffect(() => {\n      //Init Materialize javascript\n  \n      M.AutoInit();\n  }\n  )\n\n  console.log('validate');\n  console.log(store.getState());\n  //console.log(currentuserid);\n\n  return (\n    <Provider store={store}>\n    <Router>\n    <Routes>        \n          <Route  path='/' element={\n              <Fragment>                \n                <RegisterUserModal></RegisterUserModal>       \n                <Login></Login> \n              </Fragment>\n          }>\n          </Route>\n          <Route path='/events' element={\n              <Fragment>                \n                <SearchBar></SearchBar>  \n                <div className=\"container\">                     \n                    <AddEventModal></AddEventModal>       \n                    <EditEventModal></EditEventModal>        \n                    <ConfirmEventModal></ConfirmEventModal>\n                    <Events></Events>        \n                    <AddButon></AddButon>        \n                </div>\n              </Fragment>\n          }>\n          </Route>        \n    </Routes>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\SearchBar.js",["111","112","113"],[],"import React, {useState, useEffect} from 'react'\r\nimport {setSearchEventText} from '../../actions/eventActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport {connect} from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {clearauthuser} from '../../actions/authActions'\r\nimport {clearEvent} from '../../actions/eventActions'\r\n\r\nconst SearchBar = ({authuser, event, setSearchEventText, clearauthuser,clearEvent}) => {\r\n\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n\r\n    //M.AutoInit();\r\n\r\n    if (authuser!= null && authuser.currentuser != null){\r\n      console.log(authuser.currentuser);\r\n      var options = new Object();\r\n      options.html = \"<div style='text-align:left'>Email: \" +  authuser.currentuser.email +  \"<br>Region: \" +  authuser.currentuser.regionname + \"</div>\";\r\n      const elem = document.querySelector('#userinfo');\r\n      M.Tooltip.init(elem, options);       \r\n    }                \r\n},[]);\r\n\r\nfunction mouseOver(){\r\n\r\n  const elem = document.querySelector('#userinfo');\r\n  var instance = M.Tooltip.getInstance(elem);    \r\n  instance.open();\r\n\r\n}\r\n\r\n\r\n\r\n  function handleChange(event)  {\r\n\r\n    setSearchText(event.target.value);\r\n\r\n  } \r\n\r\n  function handleKeyDown(event){\r\n\r\n      if (event.key === 'Enter'){\r\n        console.log('entro al enter');        \r\n        console.log(searchText); \r\n        setSearchEventText(searchText);\r\n      }\r\n        \r\n\r\n  }\r\n\r\n  function onLogOff(){\r\n\r\n      console.log('Log off');\r\n      clearauthuser();\r\n      clearEvent();\r\n      navigate('/');\r\n  }\r\n\r\n\r\n  return (\r\n    <nav className='black' style={{ marginBottom:'30px'}}>\r\n    <div className=\"nav-wrapper\">      \r\n        <div className=\"input-field\">\r\n           {/* <input id=\"search\" type=\"search\" style={{width:'10%'}} />\r\n                       */}\r\n          <input id=\"search\" type=\"search\" className=\"left\" style={{width:'calc(100% - 230px)'}} \r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          />\r\n          <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i>\r\n          </label>          \r\n          <ul className=\"right hide-on-med-and-down\">            \r\n            <li><a href=\"#\" id=\"userinfo\"  onMouseOver={mouseOver} ><span className=\"material-symbols-outlined\">\r\n                            group\r\n                </span></a></li>\r\n            <li>\r\n            <a href=\"#!\" \r\n                onClick={onLogOff}\r\n                className='\r\n                waves-effect waves-light btn-small hide-on-med-and-down'>Log off</a>              \r\n            </li>            \r\n          </ul>\r\n        </div>      \r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  setSearchEventText: propTypes.func.isRequired,\r\n  authuser: propTypes.object.isRequired,\r\n  event: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n  event: state.event,\r\n  authuser:state.authuser\r\n})\r\n\r\nexport default connect(mapStatetoProps, {setSearchEventText,clearauthuser,clearEvent})(SearchBar)\r\n\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\Events.js",["114","115"],[],"import React, {useEffect} from 'react'\r\nimport EventItem from './EventItem'\r\nimport {connect} from 'react-redux'\r\nimport {searchEventsPerText} from '../../actions/eventActions'\r\nimport propTypes from 'prop-types'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\n\r\nconst Events = ({authuser, event :{events, current, loading, searchText}, searchEventsPerText}) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n\r\n    //if (authuser.isauthenticated === true)\r\n    if (localStorage.getItem('token') != null)\r\n    {\r\n      if (authuser.currentuser === null)\r\n          authuser.currentuser = JSON.parse(localStorage.getItem('token'));\r\n      \r\n      console.log('entro aqui 01')\r\n    //getEventsPerRegion();\r\n     //eslint-disable-next-line \r\n     console.log('entro aqui 02');\r\n     console.log(searchText);\r\n     console.log('before search');     \r\n    console.log(authuser);\r\n     searchEventsPerText(searchText, authuser.currentuser.region);\r\n     console.log('after search');     \r\n    console.log(authuser);\r\n    }    \r\n  }, [searchText]) //once\r\n\r\n\r\n  useEffect(() => {  \r\n    debugger;  \r\n    console.log('events');\r\n    console.log(localStorage.getItem('token') );\r\n    M.AutoInit();\r\n\r\n    //if (authuser.isauthenticated === false)\r\n    if (localStorage.getItem('token') === null)\r\n        navigate('/');\r\n  }, []) //once\r\n\r\n  \r\n  const renderEventRow = (events) => {\r\n\r\n    var arrrenderEventRowGroup = [];\r\n    \r\n    if (events != null){\r\n\r\n        var i=0;\r\n        var group=0;\r\n        var eventGroup = [];        \r\n\r\n        events.forEach((el)=>{\r\n            i = i + 1;\r\n            eventGroup.push(el);\r\n            if (i %3 === 0){\r\n              group = group + 1;\r\n              arrrenderEventRowGroup.push(renderEventRowGroup(group, eventGroup));  \r\n              eventGroup = [];\r\n            }\r\n            \r\n            console.log(i)\r\n        })\r\n\r\n        if  (eventGroup.length > 0){\r\n              group = group + 1;\r\n              arrrenderEventRowGroup.push(renderEventRowGroup(group, eventGroup));  \r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return arrrenderEventRowGroup;\r\n\r\n  }\r\n  \r\n  const renderEventRowGroup = (group, eventGroup) => {\r\n\r\n    if (eventGroup != null){\r\n\r\n      const eventrowdiv =  eventGroup.map((tmpevent,index) =>  {\r\n                            console.log('entro al loop '+ index);\r\n                            \r\n                            return (\r\n                              <div className=\"col s12 m4 center\" key={tmpevent.id}>\r\n                                  <EventItem key={tmpevent.id} event={tmpevent}></EventItem>  \r\n                              </div>\r\n                              )                                  \r\n                          }\r\n                  )       \r\n      \r\n      return  <div className=\"row\" key={group}>\r\n                  {eventrowdiv}\r\n              </div> \r\n  }\r\n  else{\r\n    return(        \r\n        <h4>Empty list</h4>\r\n      )   \r\n  }\r\n\r\n  \r\n  }\r\n\r\n  return (        \r\n    renderEventRow(events)            \r\n  );\r\n}\r\n\r\nEvents.propTypes = {\r\n  searchEventsPerText: propTypes.func.isRequired,\r\n  authuser: propTypes.object.isRequired,\r\n  event: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n  event: state.event,\r\n  authuser:state.authuser\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStatetoProps, {searchEventsPerText})(Events)\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\AddButon.js",["116"],[],"import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {setCurrentActionTime} from '../../actions/eventActions'\r\nimport propTypes from 'prop-types'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\n\r\nconst AddButon = ({setCurrentActionTime}) => {\r\n\r\n  function addEventForm(){\r\n\r\n    const d = new Date();\r\n    var time = d.getTime(); \r\n    console.log(time);  \r\n    console.log('addEvent after time');  \r\n    setCurrentActionTime(time);\r\n    console.log('addEvent after time 02');\r\n    const modal1 = document.querySelector('#add-event-modal');\r\n    var instance = M.Modal.getInstance(modal1);    \r\n    instance.open();  \r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n        <a href=\"#add-event-modal\" className=\"btn-floating btn-large \r\n        waves-effect waves-light blue-grey modal-trigger tooltipped\"\r\n        data-position=\"top\" data-tooltip=\"Create an event\"\r\n        onClick={addEventForm}\r\n        >\r\n            <i className=\"material-icons\">add</i>\r\n        </a>         \r\n    </div>    \r\n  )\r\n}\r\n//export default AddButon\r\n\r\nexport default connect(null, {setCurrentActionTime})(AddButon)\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\layout\\Modal.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\AddEventModal.js",["117"],[],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport {connect} from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport {addEvent} from '../../actions/eventActions'\r\n\r\nconst AddEventModal = ({authuser, addEvent,actionTime}) => {\r\n\r\n  const [title, SetTitle] = useState('');\r\n  const [description, SetDescription] = useState('');\r\n  const [region, SetRegion] = useState('');\r\n  const [createdBy, SetCreatedBy] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    if (authuser!= null && authuser.currentuser != null){        \r\n        SetTitle('');\r\n        SetDescription('');\r\n        SetRegion(authuser.currentuser.region);\r\n        SetCreatedBy(authuser.currentuser.email);\r\n\r\n        //setting default value for region\r\n        const select1 = document.querySelector('#event_region');\r\n        select1.value = authuser.currentuser.region;\r\n        console.log(authuser.currentuser.region);\r\n        M.FormSelect.init(select1, authuser.currentuser.region); \r\n    }                \r\n\r\n  }, [actionTime]) //once\r\n\r\n\r\n  const onSubmit = () => {\r\n\r\n    \r\n      console.log(title,description,region);\r\n\r\n      if (title === '' || description === '' ){\r\n        M.toast({ html:'Please enter a event title and description'}); \r\n      }\r\n      else{\r\n        const new_event = {\r\n          title: title,\r\n          description: description,\r\n          region: region,\r\n          createdby: createdBy,\r\n          date:new Date() \r\n        }\r\n\r\n        addEvent(new_event);   \r\n        \r\n        //clear fields\r\n        \r\n        SetTitle('');\r\n        SetDescription('');        \r\n        SetCreatedBy('');\r\n        \r\n      \r\n\r\n        M.toast({html: `Event was added by ${createdBy}`});\r\n\r\n        const modal1 = document.querySelector('#add-event-modal');\r\n        var instance = M.Modal.getInstance(modal1);    \r\n        instance.close();\r\n\r\n      }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"add-event-modal\" className=\"modal\" style={modalStyle}>\r\n        <div className=\"modal-content\">\r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                  <input placeholder=\"Title\" \r\n                  id=\"event_title\"\r\n                  name= \"event_title\"\r\n                  type=\"text\" \r\n                  value={title} \r\n                  onChange={e => SetTitle(e.target.value)}\r\n                  className='validate' \r\n                  />                 \r\n              </div>\r\n            </div>                       \r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                  <textarea  placeholder=\"Description\" id=\"event_description\" \r\n                  type=\"text\" \r\n                  className='materialize-textarea' \r\n                  name= \"event_description\"\r\n                  value={description}\r\n                  onChange={e=> SetDescription(e.target.value)}\r\n                 \r\n                  />                  \r\n              </div>\r\n            </div>                       \r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                   <select \r\n                    readOnly='true'                                    \r\n                    id=\"event_region\"\r\n                    name=\"event_region\"    \r\n                    disabled                \r\n                    >\r\n                        <option value=\"\" required disabled default>Choose your region</option>\r\n                        <option value=\"1\" >Lima</option>\r\n                        <option value=\"2\">Cusco</option>\r\n                        <option value=\"3\">Arequipa</option>\r\n                    </select>                        \r\n              </div>\r\n            </div>     \r\n           <div className='modal-footer'>\r\n                <a href=\"#!\" \r\n                onClick={onSubmit}\r\n                className='\r\n                 waves-effect waves-light btn'>Enter</a>\r\n            </div>                       \r\n        </div>\r\n    </div>    \r\n  )\r\n}\r\n\r\nconst modalStyle = {\r\n    with: '75%',\r\n    height:'75%'\r\n};\r\n\r\nAddEventModal.propTypes = {\r\n  authuser: propTypes.object.isRequired,\r\n  addEvent: propTypes.func.isRequired,\r\n  actionTime: propTypes.any\r\n}\r\n\r\nconst mapStatetoProps = state => ({  \r\n  authuser:state.authuser,\r\n  actionTime: state.event.actionTime\r\n})\r\n\r\nexport default connect(mapStatetoProps, {addEvent})(AddEventModal)\r\n\r\n\r\n\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\EditEventModal.js",["118"],[],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport {connect} from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport {updateEvent} from '../../actions/eventActions'\r\n\r\nconst EditEventModal = ({authuser, actionTime, current, updateEvent}) => {\r\n\r\n  const [title, SetTitle] = useState('');\r\n  const [description, SetDescription] = useState('');\r\n  const [region, SetRegion] = useState('');\r\n  const [regionvalue, SetRegionValue] = useState('');\r\n  const [createdBy, SetCreatedBy] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n     \r\n    \r\n      if (current){\r\n\r\n        \r\n        console.log('use effect editevent' + current.title);\r\n        SetTitle(current.title);\r\n        SetDescription(current.description);  \r\n        //SetRegion(authuser.currentuser.region);\r\n        SetRegion(authuser.currentuser.regionname);\r\n        SetRegionValue(authuser.currentuser.region);\r\n        SetCreatedBy(current.createdby);\r\n\r\n        //setting default value for region\r\n        \r\n        //M.AutoInit(); //initializes everything  \r\n      }\r\n\r\n  }, [current,actionTime]) //once\r\n\r\n  useEffect(() => {\r\n\r\n    M.AutoInit(); //initializes everything  \r\n  \r\n    \r\n    \r\n}, []) //once\r\n  \r\n  \r\n  function onEdit(){\r\n\r\n      console.log('editing an event');\r\n      const edit_event = {\r\n        id: current.id,\r\n        title: title,\r\n        description: description,\r\n        region: regionvalue,\r\n        createdby: createdBy,\r\n        date:new Date() \r\n      }\r\n      updateEvent(edit_event);\r\n\r\n      M.toast({html: `Event was modified by ${createdBy}`});\r\n     \r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"edit-event-modal\" className=\"modal\" style={modalStyle} >\r\n        <div className=\"modal-content\">\r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                  <input placeholder=\"Title\" id=\"event_title\" type=\"text\" className='validate'\r\n                  value={title} \r\n                  onChange={(e) => {SetTitle(e.target.value); }}/>                 \r\n              </div>\r\n            </div>                       \r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                  <textarea  placeholder=\"Description\" id=\"event_description\" type=\"text\" \r\n                  value={description}\r\n                  onChange={(e) => {SetDescription(e.target.value); }}\r\n                  className='materialize-textarea' />                 \r\n              </div>\r\n            </div>                       \r\n            <div className='row'>\r\n              <div className='input-field col s12'>\r\n                  <input  id=\"event_region\" type=\"text\" \r\n                    value={region} \r\n                    disabled='1' />\r\n              </div>\r\n            </div>               \r\n            <div className='modal-footer'>\r\n                <a href=\"#!\" className='modal-close waves-effect waves-light btn'\r\n                 onClick={onEdit}\r\n                >Enter</a>\r\n            </div> \r\n        </div>\r\n    </div>    \r\n  )\r\n}\r\n\r\nconst modalStyle = {\r\n    with: '75%',\r\n    height:'75%'\r\n};\r\n\r\nEditEventModal.propTypes = {\r\n  authuser: propTypes.object.isRequired,\r\n  actionTime: propTypes.any,\r\n  current: propTypes.object,\r\n  updateEvent: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({  \r\n  authuser:state.authuser,\r\n  current:  state.event.current,\r\n  actionTime: state.event.actionTime\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateEvent})(EditEventModal)\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\ConfirmEventModal.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\store.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\index.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\eventReducer.js",["119","120","121","122"],[],"import {    GET_EVENTS_PER_REGION, GET_EVENT, \r\n            ADD_EVENT, DELETE_EVENT,\r\n            UPDATE_EVENT,SEARCH_EVENTS,ERROR_EVENT, SET_CURRENT_EVENT, CLEAR_CURRENT_EVENT,\r\n            SET_CURRENT_ACTION_TIME, SET_SEARCH_TEXT_EVENTS, CLEAR_EVENT\r\n} from '../actions/types'\r\n\r\nconst initialstate ={\r\n    events: null,\r\n    current:null,\r\n    loading:false,\r\n    error:null,\r\n    actionTime:null,\r\n    searchText:null\r\n}\r\n\r\n\r\nexport default (state = initialstate, action) => {\r\n\r\n    switch(action.type){\r\n        case SET_SEARCH_TEXT_EVENTS:\r\n            return {\r\n                ...state,\r\n                searchText:action.payload,         \r\n                loading:false\r\n            }\r\n        case SEARCH_EVENTS:\r\n            return {\r\n                ...state,\r\n                events: action.payload,\r\n                loading:false     \r\n            }        \r\n        case GET_EVENTS_PER_REGION:\r\n            return {\r\n               ...state,\r\n               events: action.payload,\r\n               loading:false     \r\n            }\r\n        case ADD_EVENT:\r\n            return {\r\n                events: [...state.events,action.payload],\r\n                loading:false        \r\n            }   \r\n        case DELETE_EVENT:\r\n            return {\r\n                events: state.events.filter(event => event.id !== action.payload),\r\n                loading:false        \r\n            }  \r\n        case UPDATE_EVENT:\r\n            return {\r\n                ...state,   \r\n                events: state.events.map(event => event.id == action.payload.id ? action.payload : event),                  \r\n                loading:false\r\n            }                \r\n        case SET_CURRENT_EVENT:\r\n            return {\r\n                ...state,                \r\n                current: action.payload,  \r\n                actionTime: 1, \r\n                loading:false        \r\n            }        \r\n         case CLEAR_CURRENT_EVENT:\r\n                return {\r\n                    ...state,                    \r\n                    current: null,   \r\n                    loading:false        \r\n                }  \r\n        case SET_CURRENT_ACTION_TIME:\r\n                return {\r\n                    ...state,\r\n                    actionTime: action.payload \r\n                }\r\n        case CLEAR_EVENT:\r\n            return {\r\n                events: null,\r\n                current:null,\r\n                loading:false,\r\n                error:null,\r\n                actionTime:null,\r\n                searchText:null        \r\n\r\n            }                      \r\n        default:\r\n              return state;  \r\n    }\r\n\r\n}","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\types.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\eventActions.js",["123"],[],"import {    GET_EVENTS_PER_REGION, GET_EVENT, \r\n            ADD_EVENT, DELETE_EVENT,\r\n            UPDATE_EVENT,SEARCH_EVENTS,ERROR_EVENT,SET_CURRENT_EVENT, CLEAR_CURRENT_EVENT,\r\n            SET_CURRENT_ACTION_TIME, SET_SEARCH_TEXT_EVENTS, CLEAR_EVENT\r\n       } from './types'\r\n\r\n//SET SEACH EVENT TEXT\r\nexport const setSearchEventText = (searchText)  => async dispatch => {\r\n\r\n    try{\r\n        \r\n        dispatch({\r\n            type:  SET_SEARCH_TEXT_EVENTS, \r\n            payload: searchText\r\n        })\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n//SEACH EVENTS PER REGION\r\nexport const searchEventsPerText = (searchText, region)  => async dispatch => {\r\n\r\n    try{\r\n        let resp = \"\";\r\n        let data = \"\";\r\n\r\n        if (searchText != null && searchText !== \"\")        \r\n            //resp = await fetch(\"http://localhost:5000/events?title_like=\" + searchText + \"&region=\" + region);  \r\n            resp = await fetch(\"/events?title_like=\" + searchText + \"&region=\" + region);  \r\n        else\r\n            //resp = await fetch(\"http://localhost:5000/events?region=\" + region);\r\n            resp = await fetch(\"/events?region=\" + region);\r\n         \r\n        data = await resp.json();\r\n\r\n        dispatch({\r\n            type:  SEARCH_EVENTS, \r\n            payload: data\r\n        })\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n//CLEAR EVENT\r\nexport const clearEvent = ()  => async dispatch => {\r\n\r\n    try{\r\n        \r\n        dispatch({\r\n            type:  CLEAR_EVENT\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//GET EVENTS PER REGION\r\nexport const getEventsPerRegion = ()  => async dispatch => {\r\n\r\n    try{\r\n\r\n        //const resp = await fetch(\"http://localhost:5000/events\");\r\n        const resp = await fetch(\"/events\");\r\n        const data = await resp.json();\r\n\r\n        dispatch({\r\n            type:  GET_EVENTS_PER_REGION, \r\n            payload: data\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const addEvent = (event)  => async dispatch => {\r\n\r\n    try{\r\n\r\n        //const resp = await fetch(\"http://localhost:5000/events\",\r\n        const resp = await fetch(\"/events\",\r\n            {\r\n               method:'POST',\r\n               body:JSON.stringify(event),\r\n               headers: {\r\n                'Content-Type': 'application/json'\r\n                }     \r\n            }                            \r\n        );\r\n\r\n        const data = await resp.json();\r\n\r\n        dispatch({\r\n            type:  ADD_EVENT, \r\n            payload: data\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//updateEvent\r\nexport const updateEvent = (event)  => async dispatch => {\r\n\r\n    try{\r\n\r\n        //const res = await fetch(`http://localhost:5000/events/${event.id}`,\r\n        const res = await fetch(`/events/${event.id}`,\r\n            {\r\n               method:'PUT',\r\n               body:JSON.stringify(event),\r\n               headers: {\r\n                'Content-Type': 'application/json'\r\n                }     \r\n            }                            \r\n        );\r\n\r\n        const data  = await res.json();\r\n\r\n        dispatch({\r\n            type:  UPDATE_EVENT, \r\n            payload: data\r\n        })\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//delete an event\r\nexport const deleteEvent = (id)  => async dispatch => {\r\n\r\n    try{\r\n\r\n        \r\n        //await fetch(`http://localhost:5000/events/${id}`,\r\n        await fetch(`/events/${id}`,\r\n            {\r\n               method:'DELETE'               \r\n            }                            \r\n        );\r\n\r\n        \r\n        dispatch({\r\n            type:  DELETE_EVENT, \r\n            payload: id\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//set currentevent\r\nexport const clearCurrentEvent = ()  => async dispatch => {\r\n\r\n    try{\r\n\r\n        dispatch({\r\n            type:  CLEAR_CURRENT_EVENT\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n//set currentevent\r\nexport const setCurrentEvent = (event)  => async dispatch => {\r\n\r\n    try{\r\n\r\n        dispatch({\r\n            type:  SET_CURRENT_EVENT, \r\n            payload: event\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//set currentactiontime\r\nexport const setCurrentActionTime = (actionTime)  => async dispatch => {\r\n\r\n    try{\r\n       \r\n\r\n        dispatch({\r\n            type:  SET_CURRENT_ACTION_TIME, \r\n            payload: actionTime\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\events\\EventItem.js",[],[],"C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\auth\\Login.js",["124"],[],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport {connect} from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {authenticateUser, newRegistrationAction} from '../../actions/authActions'\r\n\r\n\r\nconst Login = ({authuser, authenticateUser,newRegistrationAction}) => {\r\n    const [loginUserEmail, SetLoginUserEmail] = useState('');\r\n    const [loginUserPassword, SetLoginUserPassword] = useState('');\r\n\r\n    let navigate = useNavigate();\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n      M.AutoInit();\r\n  },[]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      if (authuser.isauthenticated){\r\n        console.log('redirecting to main page');\r\n        //this.props.history.push('/events');                       \r\n        navigate('/events');\r\n      }          \r\n  },[authuser.isauthenticated]);\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n      SetLoginUserEmail('');\r\n      SetLoginUserPassword('');\r\n      \r\n      document.getElementById(\"LoginUserEmail\").classList.remove(\"invalid\");\r\n      document.getElementById(\"LoginUserEmail\").classList.remove(\"valid\");\r\n      document.getElementById(\"LoginUserPassword\").classList.remove(\"invalid\");\r\n      document.getElementById(\"LoginUserPassword\").classList.remove(\"valid\");\r\n      \r\n      \r\n  },[authuser.newregistrationaction]);\r\n\r\n    useEffect(() => {\r\n          \r\n       //eslint-disable-next-line \r\n       //console.log('hi');\r\n       //console.log(authuser)\r\n\r\n       if (authuser.errormessage !== null && authuser.errormessage !== \"\"){\r\n          \r\n          if (authuser.errormessage === \"User does not exist\")  {\r\n            SetLoginUserEmail('');\r\n            SetLoginUserPassword(''); \r\n          } else if (authuser.errormessage === \"Password is not correct\")  {\r\n            SetLoginUserPassword('');  \r\n          } else {\r\n            SetLoginUserEmail('');\r\n            SetLoginUserPassword('');\r\n          }\r\n\r\n        \r\n        M.toast({ html: authuser.errormessage}); \r\n       }\r\n       \r\n    }, [authuser]) //once\r\n\r\n  const onSubmit = () => {\r\n\r\n      //debugger;\r\n      //console.log(loginUserEmail);\r\n      //console.log(loginUserPassword);\r\n      //debugger;\r\n      if (loginUserEmail === '' || loginUserPassword === '' ){\r\n        M.toast({ html:'Please enter user and password'}); \r\n      }\r\n      else{\r\n\r\n        const userInfo = {\r\n          loginUserEmail: loginUserEmail,\r\n          loginUserPassword: loginUserPassword\r\n        }\r\n\r\n        console.log('before authenticateUser');\r\n\r\n        authenticateUser(userInfo);\r\n\r\n        \r\n\r\n        \r\n                \r\n      }\r\n\r\n\r\n      \r\n        console.log('log in application');\r\n        \r\n  }\r\n\r\n\r\n  const onRegister = () => {\r\n\r\n    newRegistrationAction();\r\n    console.log('on Register application');\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">        \r\n        <div className='row'>    \r\n            <div className=\"col l3 m3 s12\"></div>\r\n            <div className=\"col l6 m6 s12 z-depth-5 card-panel\">                \r\n                  <h5 className=\"center\">Log In</h5>\r\n                  <div className=\"input-field col s12\">                \r\n                    <input id=\"LoginUserEmail\" type=\"email\" className=\"validate\"\r\n                     value={loginUserEmail}\r\n                     data-error=\"Please enter email address\"\r\n                     onChange={e => SetLoginUserEmail(e.target.value)} \r\n                     required=\"required\"/>\r\n                    <label htmlFor=\"LoginUserEmail\">Enter email</label>\r\n                    <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                  </div>\r\n                  <div className=\"input-field col s12\">\r\n                    <input id=\"LoginUserPassword\" type=\"password\" className=\"validate\"\r\n                    value={loginUserPassword}\r\n                    onChange={e => SetLoginUserPassword(e.target.value)} \r\n                    data-error=\"Please enter password\"\r\n                    required=\"required\"/>\r\n                    <label htmlFor=\"LoginUserPassword\">Enter password</label>\r\n                    <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                  </div>                       \t  \r\n                  <div className=\"input-field col s12\">\r\n                      <a href=\"#!\" \r\n                      onClick={onSubmit}\r\n                      className='waves-effect waves-light btn'>Log In</a>  \t\t\t\r\n                  </div>\r\n                  <div className=\"input-field col s12\">\r\n                      <a href=\"#registeruser-event-modal\"\r\n                              className='waves-effect waves-light modal-trigger tooltipped'                                                          \r\n                              data-tooltip=\"Register a new user\"\r\n                              onClick={onRegister}\r\n                              >Register                           \r\n                      </a>                       \r\n                  </div>                 \r\n            </div>\r\n            <div className=\"col l3 m3 s12\"></div>            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  authuser:propTypes.object.isRequired,\r\n  authenticateUser: propTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps (state)  {     \r\n  return {authuser:  state.authuser};\r\n}\r\n\r\nexport default connect(mapStateToProps, {authenticateUser,newRegistrationAction})(Login)\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\components\\auth\\RegisterUserModal.js",["125","126","127"],[],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport {connect} from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport {createUser, existsUserEmail} from '../../actions/authActions'\r\n\r\nconst RegisterUserModal = ({authuser,createUser,existsUserEmail}) => {\r\n    const [userName, SetUserName] = useState('');\r\n    const [userEmail, SetUserEmail] = useState('');\r\n    const [userpassword, SetUserPassword] = useState('');\r\n    const [userpassword2, SetUserPassword2] = useState('');\r\n    const [userRegion, SetUserRegion] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log('entro a authuser.newregistrationaction')\r\n        SetUserName('');\r\n        SetUserEmail('');\r\n        SetUserPassword('');\r\n        SetUserPassword2('');\r\n        SetUserRegion(''); \r\n        \r\n        const select1 = document.querySelector('#selectregion');\r\n        select1.value = \"\";\r\n        M.FormSelect.init(select1, null); \r\n        \r\n        //M.FormSelect.init(select1, options); \r\n        //select1.FormSelect();\r\n        //var eleminstance = M.FormSelect.getInstance(select1);\r\n        \r\n        //M.FormSelect.init(select1, options);\r\n        \r\n        //\r\n        //eleminstance.select();\r\n\r\n\r\n        document.getElementById(\"UserEmail\").classList.remove(\"invalid\");\r\n        document.getElementById(\"UserEmail\").classList.remove(\"valid\");\r\n        document.getElementById(\"UserPassword\").classList.remove(\"invalid\");\r\n        document.getElementById(\"UserPassword\").classList.remove(\"valid\");\r\n        document.getElementById(\"UserPassword2\").classList.remove(\"invalid\");\r\n        document.getElementById(\"UserPassword2\").classList.remove(\"valid\");\r\n        \r\n    },[authuser.newregistrationaction]);\r\n\r\n    \r\n    useEffect(() => {\r\n          \r\n        //eslint-disable-next-line \r\n        //console.log('hi');\r\n        //console.log(authuser)\r\n\r\n        if (authuser.user == null)\r\n        {\r\n            console.log('use effect 01');\r\n        console.log(authuser.existsuser);\r\n        console.log('use effect 02');\r\n \r\n            if (authuser.existsuser !== null){\r\n                if (authuser.existsuser === \"1\")  {  \r\n                    console.log('before M toast');                           \r\n                    M.toast({ html: 'account ' + `${userEmail}` + ' already exists'}); \r\n                    SetUserEmail('');\r\n                }\r\n                else if (authuser.existsuser === \"0\"){\r\n                    \r\n                        const new_user = {\r\n                        username: userName,\r\n                        email: userEmail,\r\n                        password: userpassword,\r\n                        region: userRegion,\r\n                        createdon:new Date() \r\n                        }\r\n                    \r\n                        createUser(new_user);   \r\n                \r\n                        M.toast({ html:'User was created'}); \r\n                        //document.getElementById(\"UserName\").classList.add(\"modal-close\");\r\n                        const modal1 = document.querySelector('#registeruser-event-modal');\r\n                        var instance = M.Modal.getInstance(modal1);    \r\n                        instance.close();\r\n                        //disbale input text\r\n\r\n                                            \r\n                }\r\n            }\r\n\r\n        }\r\n       \r\n     }, [authuser.existsuser, authuser.submittedtime]) //once\r\n \r\n\r\n    const onSubmit = (e) => {\r\n\r\n        const select1 = document.querySelector('#selectregion');\r\n        console.log('select value')\r\n        console.log(select1.value);\r\n        //select1.value = \"\";\r\n\r\n       if (userpassword !== userpassword2)\r\n           M.toast({ html:'Password values do not match'});  \r\n       else if (select1.value === \"\")    \r\n       {\r\n        M.toast({ html:'Select a region value'}); \r\n       }\r\n       else  {\r\n           console.log('verify exitence of user account');  \r\n           \r\n           existsUserEmail(userEmail);\r\n                      \r\n         }  \r\n         \r\n         e.preventDefault(); \r\n    }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} >\r\n    <div id=\"registeruser-event-modal\"  className='modal'>        \r\n        <div className='row'>\r\n            <div className=\"col l12 m12 s12\">\r\n                <h5 className='center'>User registration</h5>                \r\n                <div className=\"input-field col s12\">\r\n                <input id=\"UserEmail\" type=\"email\" className=\"validate\" \r\n                value={userEmail}\r\n                onChange={e => SetUserEmail(e.target.value)} \r\n                readOnly={!!authuser.user}     \r\n                data-error=\"Please enter email address\"\r\n                required=\"required\" aria-required=\"true\"                             \r\n                />\r\n                <label htmlFor=\"UserEmail\">Enter email</label>\r\n                <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                <input id=\"UserPassword\" type=\"password\" className=\"validate\"\r\n                value={userpassword}\r\n                onChange={e => SetUserPassword(e.target.value)}\r\n                readOnly={!!authuser.user}  \r\n                data-error=\"Please enter your password\"\r\n                required=\"required\" aria-required=\"true\" \r\n                />\r\n                <label htmlFor=\"UserPassword\">Enter password</label>\r\n                <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                <input id=\"UserPassword2\" type=\"password\" className=\"validate\" \r\n                value={userpassword2}\r\n                onChange={e => SetUserPassword2(e.target.value)}\r\n                readOnly={!!authuser.user}  \r\n                data-error=\"Please confirm your password\"\r\n                required=\"required\" aria-required=\"true\" \r\n                />\r\n                <label htmlFor=\"UserPassword2\">Confirm password</label>\r\n                <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <select onChange={e => SetUserRegion(e.target.value)} value={userRegion} readOnly={!!authuser.user} \r\n                    data-error=\"Please select a region\"                     \r\n                    className=\"validate\"\r\n                    id=\"selectregion\"\r\n                    name=\"selectregion\"\r\n                    defaultValue=\"\"\r\n                    >\r\n                        <option value=\"\" required disabled default>Choose your region</option>\r\n                        <option value=\"1\">Lima</option>\r\n                        <option value=\"2\">Cusco</option>\r\n                        <option value=\"3\">Arequipa</option>\r\n                    </select>\r\n                    <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\"></span>\r\n                </div>\t\r\n\r\n                { (authuser.user == null) && \t   \r\n                <div className=\"input-field col s12\">\r\n                        \r\n                        <button name=\"action\" type='submit' className='waves-effect waves-light btn'>Create</button>                        \t\t\t\r\n                </div>\r\n                }\r\n            </div>                       \r\n        </div>\r\n    </div>\r\n    </form>\r\n    \r\n  )\r\n\r\n  \r\n}\r\n\r\nfunction mapStateToProps (state)  {       \r\n    return {authuser:  state.authuser};\r\n  }\r\n\r\nRegisterUserModal.propTypes = {\r\n    createUser: propTypes.func.isRequired\r\n  }\r\n\r\n//export default RegisterUserModal\r\nexport default connect(mapStateToProps, {createUser,existsUserEmail})(RegisterUserModal)\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\reducers\\authReducer.js",["128"],[],"import {    REGISTER_USER, GET_AUTH_USER, ERROR_USER, EXISTS_AUTH_USER, \r\n    NEW_REGISTRATION_ACTION,CLEAR_AUTH_USER\r\n} from '../actions/types'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nconst userinitialstate ={    \r\n    user: null,\r\n    currentuser:null,\r\n    existsuser:null,\r\n    loadinguser:false,    \r\n    errormessage:null,\r\n    submittedtime: null,\r\n    newregistrationaction:null,\r\n    isauthenticated:false\r\n}\r\n\r\nexport default (state = userinitialstate, action) => {\r\n\r\n    switch(action.type){\r\n        case GET_AUTH_USER:\r\n            const unique_id = uuid();\r\n            console.log('GET_AUTH_USER')\r\n            console.log(unique_id)\r\n            localStorage.setItem('token', JSON.stringify(action.payload));\r\n            console.log(localStorage.getItem('token'));\r\n            return {\r\n                ...state,               \r\n                currentuser: action.payload,\r\n                errormessage:null,\r\n                loadinguser:false,\r\n                isauthenticated:true  \r\n            }                \r\n        case REGISTER_USER:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                currentuser: null,\r\n                user: action.payload,\r\n                errormessage:null,\r\n                isauthenticated:false\r\n            }   \r\n        case EXISTS_AUTH_USER:\r\n            return {\r\n                ...state,\r\n                existsuser: action.payload,\r\n                currentuser:null,\r\n                errormessage:null,\r\n                submittedtime:new Date().getTime(),\r\n                isauthenticated:false\r\n            }            \r\n        case ERROR_USER:\r\n            localStorage.removeItem('token');\r\n            return {\r\n               ...state,               \r\n               currentuser:null,\r\n               errormessage: action.payload,\r\n               loadinguser:false,\r\n               isauthenticated:false\r\n            }\r\n        case NEW_REGISTRATION_ACTION:\r\n            localStorage.removeItem('token');\r\n            return {\r\n               ...state,\r\n               user: null,\r\n               currentuser:null,\r\n               existsuser:null,\r\n               loadinguser:false,    \r\n               errormessage:null,\r\n               submittedtime: null,\r\n               newregistrationaction: new Date().getTime(),               \r\n               isauthenticated:false\r\n            }  \r\n        case CLEAR_AUTH_USER:\r\n            localStorage.removeItem('token');\r\n            return {              \r\n                user: null,\r\n                currentuser:null,\r\n                existsuser:null,\r\n                loadinguser:false,    \r\n                errormessage:null,\r\n                submittedtime: null,\r\n                newregistrationaction: null,                \r\n                isauthenticated:false\r\n             }\r\n        default:{\r\n            return state\r\n        }\r\n             \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Bitacora Cambios\\REACT\\Assessment\\eventfinderapp\\src\\actions\\authActions.js",[],[],{"ruleId":"129","severity":1,"message":"130","line":1,"column":37,"nodeType":"131","messageId":"132","endLine":1,"endColumn":45},{"ruleId":"129","severity":1,"message":"133","line":15,"column":42,"nodeType":"131","messageId":"132","endLine":15,"endColumn":46},{"ruleId":"134","severity":1,"message":"135","line":22,"column":21,"nodeType":"136","messageId":"137","endLine":22,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":27,"column":3,"nodeType":"140","endLine":27,"endColumn":5,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":78,"column":17,"nodeType":"144","endLine":78,"endColumn":69},{"ruleId":"138","severity":1,"message":"145","line":33,"column":6,"nodeType":"140","endLine":33,"endColumn":18,"suggestions":"146"},{"ruleId":"138","severity":1,"message":"147","line":45,"column":6,"nodeType":"140","endLine":45,"endColumn":8,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":30,"column":6,"nodeType":"140","endLine":30,"endColumn":18,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"151","line":36,"column":6,"nodeType":"140","endLine":36,"endColumn":26,"suggestions":"152"},{"ruleId":"129","severity":1,"message":"153","line":1,"column":36,"nodeType":"131","messageId":"132","endLine":1,"endColumn":45},{"ruleId":"129","severity":1,"message":"154","line":3,"column":40,"nodeType":"131","messageId":"132","endLine":3,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":17,"column":1,"nodeType":"157","endLine":86,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":51,"column":60,"nodeType":"160","messageId":"161","endLine":51,"endColumn":62},{"ruleId":"129","severity":1,"message":"153","line":1,"column":36,"nodeType":"131","messageId":"132","endLine":1,"endColumn":45},{"ruleId":"138","severity":1,"message":"147","line":29,"column":5,"nodeType":"140","endLine":29,"endColumn":31,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":61,"column":48,"nodeType":"160","messageId":"165","endLine":61,"endColumn":49},{"ruleId":"163","severity":1,"message":"164","line":61,"column":65,"nodeType":"160","messageId":"165","endLine":61,"endColumn":66},{"ruleId":"138","severity":1,"message":"166","line":89,"column":9,"nodeType":"140","endLine":89,"endColumn":54,"suggestions":"167"},{"ruleId":"155","severity":1,"message":"156","line":18,"column":1,"nodeType":"157","endLine":92,"endColumn":2},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-new-object","The object literal notation {} is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authuser'. Either include it or remove the dependency array.","ArrayExpression",["168"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'authuser' and 'searchEventsPerText'. Either include them or remove the dependency array. If 'searchEventsPerText' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["170"],"'propTypes' is defined but never used.",["171"],"React Hook useEffect has missing dependencies: 'authuser.currentuser.region' and 'authuser.currentuser.regionname'. Either include them or remove the dependency array. If 'SetRegion' needs the current value of 'authuser.currentuser.regionname', you can also switch to useReducer instead of useState and read 'authuser.currentuser.regionname' in the reducer.",["172"],"'GET_EVENT' is defined but never used.","'ERROR_EVENT' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["173"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'authuser.user', 'createUser', 'userEmail', 'userName', 'userRegion', and 'userpassword'. Either include them or remove the dependency array. If 'createUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [authuser]",{"range":"189","text":"190"},"Update the dependencies array to be: [authuser, searchEventsPerText, searchText]",{"range":"191","text":"192"},"Update the dependencies array to be: [navigate]",{"range":"193","text":"194"},"Update the dependencies array to be: [actionTime, authuser]",{"range":"195","text":"196"},"Update the dependencies array to be: [current, actionTime, authuser.currentuser.regionname, authuser.currentuser.region]",{"range":"197","text":"198"},"Update the dependencies array to be: [authuser.isauthenticated, navigate]",{"range":"199","text":"200"},"Update the dependencies array to be: [authuser.existsuser, authuser.submittedtime, authuser.user, createUser, userEmail, userName, userRegion, userpassword]",{"range":"201","text":"202"},[1053,1055],"[authuser]",[1102,1114],"[authuser, searchEventsPerText, searchText]",[1392,1394],"[navigate]",[1062,1074],"[actionTime, authuser]",[1111,1131],"[current, actionTime, authuser.currentuser.regionname, authuser.currentuser.region]",[862,888],"[authuser.isauthenticated, navigate]",[3412,3457],"[authuser.existsuser, authuser.submittedtime, authuser.user, createUser, userEmail, userName, userRegion, userpassword]"]
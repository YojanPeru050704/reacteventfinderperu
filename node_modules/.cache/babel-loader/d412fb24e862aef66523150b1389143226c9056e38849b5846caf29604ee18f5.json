{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, GET_AUTH_USER, ERROR_EVENT, ERROR_AUTH } from './types';\n\n//AUTH USER\nexport const authenticateUser = user => async dispatch => {\n  try {\n    console.log('uno');\n    console.log(user);\n    const vemail = user.loginUserEmail;\n    const vpassword = user.loginUserPassword;\n    console.log(vpassword);\n    let resp = await fetch(\"http://localhost:5000/users?username=\" + vemail + \"&password=\" + vpassword);\n    let data = await resp.json();\n    if (data.length > 0) {\n      dispatch({\n        type: GET_AUTH_USER,\n        payload: data[0]\n      });\n    } else {\n      resp = await fetch(\"http://localhost:5000/users?username=\" + vemail);\n      data = await resp.json();\n      if (data.length === 0) dispatch({\n        type: ERROR_AUTH,\n        payload: \"User does not exist\"\n      });else dispatch({\n        type: ERROR_AUTH,\n        payload: \"Password is incorrect\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ERROR_AUTH,\n      payload: error.response.statusText\n    });\n  }\n};\n\n//REGISTER AN USER","map":{"version":3,"names":["LOGIN_USER","REGISTER_USER","GET_AUTH_USER","ERROR_EVENT","ERROR_AUTH","authenticateUser","user","dispatch","console","log","vemail","loginUserEmail","vpassword","loginUserPassword","resp","fetch","data","json","length","type","payload","error","response","statusText"],"sources":["C:/Bitacora Cambios/REACT/Assessment/eventfinderapp/src/actions/authActions.js"],"sourcesContent":["import {  LOGIN_USER, REGISTER_USER, GET_AUTH_USER , ERROR_EVENT, ERROR_AUTH \r\n} from './types'\r\n\r\n//AUTH USER\r\nexport const authenticateUser = (user)  => async dispatch => {\r\n\r\n    try{\r\n        console.log('uno');\r\n        console.log(user);\r\n        \r\n        const vemail = user.loginUserEmail;\r\n        const vpassword =user.loginUserPassword;\r\n\r\n        \r\n        console.log(vpassword);\r\n\r\n        let resp = await fetch(\"http://localhost:5000/users?username=\" + vemail + \"&password=\" + vpassword);\r\n        let data = await resp.json();\r\n\r\n        if (data.length > 0){\r\n            dispatch({\r\n                type:  GET_AUTH_USER, \r\n                payload: data[0]\r\n            })\r\n        }\r\n        else{\r\n            resp = await fetch(\"http://localhost:5000/users?username=\" + vemail);\r\n            data = await resp.json();\r\n            \r\n            if (data.length === 0)\r\n            dispatch({\r\n                type:  ERROR_AUTH, \r\n                payload: \"User does not exist\"\r\n            }) \r\n            else\r\n            dispatch({\r\n                type:  ERROR_AUTH, \r\n                payload: \"Password is incorrect\"\r\n            })\r\n        }\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_AUTH, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//REGISTER AN USER"],"mappings":"AAAA,SAAUA,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAGC,WAAW,EAAEC,UAAU,QACrE,SAAS;;AAEhB;AACA,OAAO,MAAMC,gBAAgB,GAAIC,IAAI,IAAM,MAAMC,QAAQ,IAAI;EAEzD,IAAG;IACCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEjB,MAAMI,MAAM,GAAGJ,IAAI,CAACK,cAAc;IAClC,MAAMC,SAAS,GAAEN,IAAI,CAACO,iBAAiB;IAGvCL,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IAEtB,IAAIE,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAuC,GAAGL,MAAM,GAAG,YAAY,GAAGE,SAAS,CAAC;IACnG,IAAII,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;IAE5B,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAC;MAChBX,QAAQ,CAAC;QACLY,IAAI,EAAGjB,aAAa;QACpBkB,OAAO,EAAEJ,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,MACG;MACAF,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAuC,GAAGL,MAAM,CAAC;MACpEM,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;MAExB,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EACrBX,QAAQ,CAAC;QACLY,IAAI,EAAGf,UAAU;QACjBgB,OAAO,EAAE;MACb,CAAC,CAAC,MAEFb,QAAQ,CAAC;QACLY,IAAI,EAAGf,UAAU;QACjBgB,OAAO,EAAE;MACb,CAAC,CAAC;IACN;EACJ,CAAC,CACD,OAAMC,KAAK,EACX;IACId,QAAQ,CAAC;MACLY,IAAI,EAAGf,UAAU;MACjBgB,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC5B,CAAC,CAAC;EACN;AAGJ,CAAC;;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}
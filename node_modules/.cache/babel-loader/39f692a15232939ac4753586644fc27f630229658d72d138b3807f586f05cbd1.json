{"ast":null,"code":"import { GET_EVENTS_PER_REGION, GET_EVENT, ADD_EVENT, DELETE_EVENT, UPDATE_EVENT, SEARCH_EVENTS, ERROR_EVENT } from './types';\n\n//GET EVENTS PER REGION\nexport const getEventsPerRegion = () => async dispatch => {\n  try {\n    const resp = await fetch(\"http://localhost:5000/events\");\n    const data = await resp.json();\n    dispatch({\n      type: GET_EVENTS_PER_REGION,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_EVENT,\n      payload: error.response.statusText\n    });\n  }\n};","map":{"version":3,"names":["GET_EVENTS_PER_REGION","GET_EVENT","ADD_EVENT","DELETE_EVENT","UPDATE_EVENT","SEARCH_EVENTS","ERROR_EVENT","getEventsPerRegion","dispatch","resp","fetch","data","json","type","payload","error","response","statusText"],"sources":["C:/Bitacora Cambios/REACT/Assessment/eventfinderapp/src/actions/eventActions.js"],"sourcesContent":["import {    GET_EVENTS_PER_REGION, GET_EVENT, \r\n            ADD_EVENT, DELETE_EVENT,\r\n            UPDATE_EVENT,SEARCH_EVENTS,ERROR_EVENT\r\n       } from './types'\r\n\r\n//GET EVENTS PER REGION\r\nexport const getEventsPerRegion = ()  => async dispatch => {\r\n\r\n    try{\r\n\r\n        const resp = await fetch(\"http://localhost:5000/events\");\r\n        const data = await resp.json();\r\n\r\n        dispatch({\r\n            type:  GET_EVENTS_PER_REGION, \r\n            payload: data\r\n        })\r\n\r\n\r\n    } \r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:  ERROR_EVENT, \r\n            payload: error.response.statusText\r\n        })\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":"AAAA,SAAYA,qBAAqB,EAAEC,SAAS,EAChCC,SAAS,EAAEC,YAAY,EACvBC,YAAY,EAACC,aAAa,EAACC,WAAW,QACpC,SAAS;;AAEvB;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAO,MAAMC,QAAQ,IAAI;EAEvD,IAAG;IAEC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IACxD,MAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;IAE9BJ,QAAQ,CAAC;MACLK,IAAI,EAAGb,qBAAqB;MAC5Bc,OAAO,EAAEH;IACb,CAAC,CAAC;EAGN,CAAC,CACD,OAAMI,KAAK,EACX;IACIP,QAAQ,CAAC;MACLK,IAAI,EAAGP,WAAW;MAClBQ,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC5B,CAAC,CAAC;EACN;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}